Given an integer rowIndex, return the rowIndexth (0-indexed) row of the Pascal's triangle.

Example 1:

Input: rowIndex = 3
Output: [1,3,3,1]


class Solution {
public:
    vector<int> getRow(int rowIndex) {
        vector<int> res (rowIndex + 1, 1);
        
        for(int i = 0; i <= rowIndex; i++) {
            for(int j = i - 1; j > 0; j--) {
                res[j] = res[j] + res[j - 1];
            }
        }
        return res;
    }
};


Constraints:
0 <= rowIndex <= 33

Follow up: Could you optimize your algorithm to use only O(rowIndex) extra space?
